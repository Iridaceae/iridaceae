core responsible for iris main functionality and logics
commands are commands handler

--> full on microservices
services
- messageBuilder

- databaseHandler
    if we want to save statistics --> CRUD with `mgo` --> lives inside internal/datastore/mongo.go and internal/datastore/db.go
    model:
        - Users -> save user model and just update pomodoroTime saved under minutesStudied
        - Pomodoro -> maybe just have to save it in cache
    - DAO
    - CRUD
    - repo

- commandHandler
    This contains error handling
    Given prefix setup different commands
    features:
        !ir simp @givenuser --> discordID --> assign people to people

- cache
- redispool
- pubsub
- rabitmq

- metrics
    prometheus

- dashboard
    webapi gorilla/mux
    rate limiter and cors

TODO:
- pkg to construct message
- added ability to time intercept ==> create a time interceptor?

setup ci with coverage
    - a deploy branch explicit for heroku -> docker images
    - prob setup a shell scripts to do so